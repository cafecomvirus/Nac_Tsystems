package nac;

import java.util.Scanner;

public class Pedido {
	static int prazo=0;
	static Scanner e = new Scanner(System.in);
	static double precoVolumePeso[][] = new double[][] { { 1, 15.00, 0.012, 3.0 }, { 2, 16.00, 0.010, 2.4 },
			{ 3, 17.00, 0.011, 3.6 } };
	static double ctDistribuicao[][] = new double[][] { { -23.5489, -46.6388 }, { -30.0277, -51.2287 },
			{ -12.9704, -38.5124 }, { -8.05428, -34.8813 }, { -16.6799, -49.255 }, { -3.10719, -60.0261 } };	
	static double localCli[] = new double[2];	
	//quantidade - preco - peso	
	static double infoPedido[][] = new double [3][3];
	static int d=109;
	static String cliente = "";
	static String data=""; 
	static double valorCompra=0;
	
	public static void main(String[] args) {
	
		while(cadastrarPedido().equalsIgnoreCase("sim")){
			iniciarPedido();
			//calculaFrete(calculaDistancia());
			finalizaPedido(calculaFrete(calculaDistancia()));
		}
		relatorio();
	}

	public static String cadastrarPedido(){
		String continuar = "";
		System.out.println("Deseja cadastrar um novo pedido? ");
		System.out.println("SIM - PARA CONTINUAR");
		System.out.println("NÃO - PARA CANCELAR");
		continuar=e.next();
		return continuar;
	}
	
	
	public static double[][] iniciarPedido() {
		int qt=0;
		//para controlar o indice da matriz
		//posição 0 = quantidade, posição 2 = preço, posição 3 = peso
		double prod[]=new double [3];
		System.out.println("Data do pedido:");
		data=e.next();
		System.out.println("Nome do cliente: ");
		cliente = e.next();
		System.out.println("Digite a latitude: ");
		localCli[0] = e.nextDouble();
		System.out.println("Digite a longitude");
		localCli[1] = e.nextDouble();
		for (int i = 0; i < 3; i++) {
				System.out.print("Produto: " + precoVolumePeso[i][0]);
				System.out.print(" - Preço: R$" + precoVolumePeso[i][1]);
				System.out.print(" - Volume: " + precoVolumePeso[i][2] + "m³");
				System.out.print(" - Peso: " + precoVolumePeso[i][3] + "Kg");
				System.out.println(" ");
		}
		
		for(int i = 0; i<3; i++){
			System.out.println("Quantidade de produtos "+(precoVolumePeso[i][0])+ ": ");
			infoPedido[i][0]=e.nextDouble();
			infoPedido[i][1]=infoPedido[i][0]*precoVolumePeso[i][1];
			infoPedido[i][2]=infoPedido[i][0]*precoVolumePeso[i][3];
			valorCompra+=infoPedido[i][1];
		}
		
		return infoPedido;
	}
	
	public static double calculaDistancia(){
		double menorDistancia=0;																				
		double distancia[]=new double [6];							
		for(int i = 0; i<6; i++){
			distancia[i]=Math.sqrt(Math.pow((localCli[0]-ctDistribuicao[i][0]),2)-Math.pow((localCli[1]-ctDistribuicao[i][1]), 2))*d;	
		}
		for(int j = 0; j<6; j++){
			if(j==0){
				menorDistancia=distancia[j];
			}else if(distancia[j]<menorDistancia){
				menorDistancia=distancia[j];
			}
		}
		
		if(menorDistancia<500){
			prazo=5;
		}else if(menorDistancia<800){
			prazo=8;
		}else if(menorDistancia>1000){
			prazo=10;
		}
		return menorDistancia;
	}
	
	public static double calculaFrete(double menorDistancia){
		double somaPedido=0;
		double frete=0;
		
		for(int i = 0; i<3; i++){
			somaPedido+=infoPedido[i][2];
		}
		if(menorDistancia>=500){
			frete=((somaPedido*(menorDistancia/300)*0.2)+50);
		}else if(menorDistancia>=100 && menorDistancia<=500){
			frete=((somaPedido*(menorDistancia/50)*0.04)+30);
		}else if(menorDistancia<100){
			frete=((somaPedido*(menorDistancia/25)*0.04)+10);
		}
		return frete;
		
	}
	
	public static void finalizaPedido(double frete){
		System.out.println("Data: "+data);
		System.out.println("Cliente: "+cliente);
		System.out.println("Latitude: "+localCli[0]);
		System.out.println("Longitude: "+localCli[1]);
		System.out.println("Cor 1 "+" - Quantidade: "+infoPedido[0][0] +" - Valor: R$"+infoPedido[0][1]);
		System.out.println("Cor 2 "+" - Quantidade: "+infoPedido[1][0] +" - Valor: R$"+infoPedido[1][1]);
		System.out.println("Cor 3 "+" - Quantidade? "+infoPedido[2][0] +" - Valor: R$"+infoPedido[2][1]);
		System.out.println("Prazo: "+prazo+" dias");
		System.out.println("Valor da compra: R$"+Math.round(valorCompra+frete));
		System.out.println("Prioridade: ");
	}
	
	public static void relatorio(){
		
	}
}
